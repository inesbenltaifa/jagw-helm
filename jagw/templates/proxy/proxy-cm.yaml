apiVersion: v1
kind: ConfigMap
metadata:
    name: "{{ .Values.proxy.name }}-config"
data:
    envoy.yaml: |
    admin:
    address:
        socket_address: { address: {{ .Values.proxy.config.appServerAddress }}, port_value: {{ .Values.proxy.config.appServerPort }} }

    static_resources:
    listeners:
    - name: subscription_listener
        address:
        socket_address: { address: {{ .Values.proxy.config.appServerAddress }}, port_value: {{ .Values.proxy.config.internalSubscriptionServicePort }} }
        filter_chains:
        - filters:
        - name: envoy.filters.network.http_connection_manager
            typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stat_prefix: ingress_http
            codec_type: AUTO
            route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                domains: ["*"]
                routes:
                - match: { prefix: "/" }
                    route:
                    cluster: subscription_service
                    timeout: 0s
                    max_stream_duration:
                        grpc_timeout_header_max: 0s
                cors:
                    allow_origin_string_match:
                    - prefix: "*"
                    allow_methods: GET, PUT, DELETE, POST, OPTIONS
                    allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                    max_age: "1728000"
                    expose_headers: custom-header-1,grpc-status,grpc-message
            http_filters:
            - name: envoy.filters.http.grpc_web
            - name: envoy.filters.http.cors
            - name: envoy.filters.http.router
    - name: request_listener
        address:
        socket_address: { address: {{ .Values.proxy.config.appServerAddress }}, port_value: {{ .Values.proxy.config.internalRequestServicePort }} }
        filter_chains:
        - filters:
        - name: envoy.filters.network.http_connection_manager
            typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stat_prefix: ingress_http
            codec_type: AUTO
            route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                domains: ["*"]
                routes:
                - match: { prefix: "/" }
                    route:
                    cluster: request_service
                    timeout: 0s
                    max_stream_duration:
                        grpc_timeout_header_max: 0s
                cors:
                    allow_origin_string_match:
                    - prefix: "*"
                    allow_methods: GET, PUT, DELETE, POST, OPTIONS
                    allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                    max_age: "1728000"
                    expose_headers: custom-header-1,grpc-status,grpc-message
            http_filters:
            - name: envoy.filters.http.grpc_web
            - name: envoy.filters.http.cors
            - name: envoy.filters.http.router
    clusters:
    - name: subscription_service
        connect_timeout: 0.25s
        type: logical_dns
        http2_protocol_options: {}
        lb_policy: round_robin
        load_assignment:
        cluster_name: subscription_service_cluster
        endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                    socket_address:
                        address: {{ .Values.subscriptionService.name }}.{{ .Release.Namespace }}.svc.cluster.local
                        port_value: {{ .Values.subscriptionService.config.appServerPort }}
    - name: request_service
        connect_timeout: 0.25s
        type: logical_dns
        http2_protocol_options: {}
        lb_policy: round_robin
        load_assignment:
        cluster_name: request_service_cluster
        endpoints:
            - lb_endpoints:
                - endpoint:
                    address:
                    socket_address:
                        address: {{ .Values.requestService.name }}.{{ .Release.Namespace }}.svc.cluster.local
                        port_value: {{ .Values.requestService.config.appServerPort }}