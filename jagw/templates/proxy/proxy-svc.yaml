apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ .Values.proxy.name }}
  name: {{ .Values.proxy.name }}
spec:
  selector:
    app: {{ .Values.proxy.name }}
  type: {{ .Values.proxy.config.service.type }}
  ports:
  - name: {{ .Values.subscriptionService.name }}
    port: {{ .Values.proxy.config.subscriptionServicePort }}
    protocol: TCP
    targetPort: {{ .Values.proxy.config.subscriptionServicePort }}
    {{- if and (eq .Values.proxy.config.service.type "NodePort") .Values.proxy.config.service.nodePort.subscriptionServiceNodePort }}
    nodePort: {{ .Values.proxy.config.service.nodePort.subscriptionServiceNodePort }}
    {{- end }}
  - name: {{ .Values.requestService.name }}
    port: {{ .Values.proxy.config.requestServicePort }}
    protocol: TCP
    targetPort: {{ .Values.proxy.config.requestServicePort }}
    {{- if and (eq .Values.proxy.config.service.type "NodePort") .Values.proxy.config.service.nodePort.requestServiceNodePort }}
    nodePort: {{ .Values.proxy.config.service.nodePort.requestServiceNodePort}}
    {{- end }}
  {{- if and .Values.proxy.config.loadBalancerIP (eq .Values.proxy.config.service.type "LoadBalancer") }}
  loadBalancerIP: "{{ .Values.proxy.config.service.loadBalancerIP }}"
  {{- end }}