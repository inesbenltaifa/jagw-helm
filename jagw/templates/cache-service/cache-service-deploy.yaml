apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.cacheService.name }}"
spec:
  replicas: {{ .Values.cacheService.replicas }}
  selector:
    matchLabels:
      app: "{{ .Values.cacheService.name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.cacheService.name }}"
    spec:
      containers:
        - image: "{{ .Values.cacheService.image.repository }}:{{ .Values.release.cacheServiceTag }}"
          envFrom:
            - configMapRef:
                name: {{ .Values.cacheService.name }}-config
            - secretRef:
                name: {{ .Values.cacheService.name }}-secret
          {{- if .Values.imagePullSecrets }}
          imagePullPolicy: "{{ .Values.imagePullSecrets }}"
          {{- end }}
          imagePullPolicy: "{{ .Values.cacheService.image.pullPolicy }}"
          name: "{{ .Values.cacheService.name }}"
          {{- if .Values.cacheService.resources }}
          resources:
            {{- if .Values.cacheService.resources.requests }}
            requests:
              memory: {{ .Values.cacheService.resources.requests.memory | default "50Mi" | quote }}
              cpu: {{ .Values.cacheService.resources.requests.cpu | default "10m" | quote }}
            {{- else}}
            requests:
              memory: "50Mi"
              cpu: "10m"
            {{- end}}
            {{- if .Values.cacheService.resources.limits }}
            limits:
              memory: {{ .Values.cacheService.resources.limits.memory | default "1024Mi" | quote }}
              cpu: {{ .Values.cacheService.resources.limits.cpu | default "1" | quote }}
            {{- else}}
            limits:
              memory: "1024Mi"
              cpu: "1"
            {{- end }}
          {{- else }}
          resources:
            requests:
              memory: "50Mi"
              cpu: "10m"
            limits:
              memory: "1024Mi"
              cpu: "1"
          {{- end }}
